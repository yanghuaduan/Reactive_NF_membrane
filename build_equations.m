function F = build_equations(x, Plate_num, del_x, D_14D, Kf_14D, e, vf, ...
    In_membrane_rate, Radic_yield, k_SO4_14D, k_SO4_NOM, Phi, ...
    D_NOM, Kf_NOM_small, z_NOM, ps_14D, ps_NOM_small, d0, d_permeate, ...
    C_14D_min0, C_NOM_small0)

a = x(1:Plate_num);
nom = x(Plate_num+1:end);
F = zeros(2*Plate_num, 1);

F(1) = a(1) - C_14D_min0;
F(2) = nom(1) - C_NOM_small0;

for l = 1:Plate_num-2
    F(l*2+1) = -D_14D*Kf_14D*e*(a(l+1)-a(l))/del_x + ...
        Kf_14D*0.5*(a(l+1)+a(l))*vf - ...
        (-D_14D*Kf_14D*e*(a(l+2)-a(l+1))/del_x + ...
        Kf_14D*0.5*(a(l+2)+a(l+1))*vf) - ...
        In_membrane_rate(l)*Radic_yield/20 * k_SO4_14D * a(l+1)/(k_SO4_14D*a(l+1) + k_SO4_NOM*nom(l+1));

    F(l*2+2) = -D_NOM*Kf_NOM_small*e*(nom(l+1)-nom(l))/del_x + ...
        Kf_NOM_small*0.5*(nom(l+1)+nom(l))*vf - ...
        z_NOM*D_NOM*Kf_NOM_small*e*0.5*(nom(l+1)+nom(l))*(Phi(l+1)-Phi(l))/del_x - ...
        (-D_NOM*Kf_NOM_small*e*(nom(l+2)-nom(l+1))/del_x + ...
        Kf_NOM_small*0.5*(nom(l+2)+nom(l+1))*vf - ...
        z_NOM*D_NOM*Kf_NOM_small*e*0.5*(nom(l+2)+nom(l+1))*(Phi(l+2)-Phi(l+1))/del_x) - ...
        In_membrane_rate(l)*Radic_yield/4 * k_SO4_NOM * nom(l+1)/(k_SO4_14D*a(l+1) + k_SO4_NOM*nom(l+1));
end

% Boundary equations
F(2*Plate_num-1) = -D_14D*Kf_14D*e*(a(end)-a(end-1))/del_x + ...
    Kf_14D*0.5*(a(end)+a(end-1))*vf - ...
    vf*a(end)/ps_14D - ...
    In_membrane_rate(end)*Radic_yield/20 * k_SO4_14D * a(end)/(k_SO4_14D*a(end) + k_SO4_NOM*nom(end));

F(2*Plate_num) = -D_NOM*Kf_NOM_small*e*(nom(end)-nom(end-1))/del_x + ...
    Kf_NOM_small*0.5*(nom(end)+nom(end-1))*vf - ...
    z_NOM*D_NOM*Kf_NOM_small*e*0.5*(nom(end)+nom(end-1))*(Phi(end)-Phi(end-1))/del_x - ...
    vf*nom(end)/ps_NOM_small/exp(-z_NOM*d_permeate) - ...
    In_membrane_rate(end)*Radic_yield/4 * k_SO4_NOM * nom(end)/(k_SO4_14D*a(end) + k_SO4_NOM*nom(end));
end